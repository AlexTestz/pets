name: Build and Deploy to EC2

on:
  push:
    branches:
      - QA

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Checkout code.
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configuration Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Paso 3: Login on Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Paso 4: Build and upload Docker images
    - name: Build and push Docker images
      run: |
        docker build -t alexmpz/update-pet:qa ./update-pet
        docker build -t alexmpz/get-pet:qa ./get-pet
        docker build -t alexmpz/delete-pet:qa ./delete-pet
        docker build -t alexmpz/create-pet:qa ./create-pet
        docker push alexmpz/update-pet:qa
        docker push alexmpz/get-pet:qa
        docker push alexmpz/delete-pet:qa
        docker push alexmpz/create-pet:qa

    # Paso 5: Connect to the EC2 instance using elastic IP and deploy the containers
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOSTT }}  # IP EC2 elastic
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          # Detener y eliminar contenedores antiguos si existen
          docker stop $(docker ps -aq)
          docker rm $(docker ps -aq)
          
          # Descargar imágenes desde Docker Hub
          docker pull alexmpz/update-pet:qa
          docker pull alexmpz/get-pet:qa
          docker pull alexmpz/delete-pet:qa
          docker pull alexmpz/create-pet:qa
          
          # Ejecutar contenedores en puertos específicos, pasando las variables de entorno

          # Contenedor para update-pet
          docker run -d -p 3013:3013 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            -e GET_CLIENT_URL=${{ secrets.GET_CLIENT_URL }} \
            alexmpz/update-pet:qa
          
          # Contenedor para get-pet
          docker run -d -p 3012:3012 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            alexmpz/get-pet:qa
          
          # Contenedor para delete-pet
          docker run -d -p 3014:3014 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            alexmpz/delete-pet:qa
          
          # Contenedor para create-pet
          docker run -d -p 3011:3011 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            -e CLIENT_SERVICE_HOST=${{ secrets.CLIENT_SERVICE_HOST }} \
            -e CLIENT_SERVICE_PORT=${{ secrets.CLIENT_SERVICE_PORT }} \
            alexmpz/create-pet:qa
